name: Build main3.py EXE

on:
   workflow_dispatch:
     inputs:
       tag_name:
         description: '输入要创建 Release 的 tag 名称（格式如 v1.0.0）'
         required: true
         type: string

env:
  target_file: "main3.py"

jobs:

  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller playwright
          pip install -r requirements.txt
          pip install PySimpleGUI-4.60.5-py3-none-any.whl  # 安装本地 whl 文件

      - name: Install Playwright Chromium
        run: |
          $env:PLAYWRIGHT_BROWSERS_PATH="0"
          playwright install chromium
        shell: powershell

      - name: Build EXE
        run: |
          pyinstaller -w ${{ env.target_file }}
        shell: powershell

      - name: Compress build folder
        run: |
          $targetFile = "${{ env.target_file }}"
          # 去除 .py 后缀
          $fileName = $targetFile -replace '\.py$', ''
          # 添加文件
          echo "replaced_filename=$fileName" >> $env:GITHUB_ENV
          Copy-Item -Path "关键词.xls" -Destination "D:\a\AutoUp\AutoUp\dist\$fileName\"
          # 构建正确的压缩路径
          Compress-Archive -Path "D:\a\AutoUp\AutoUp\dist\$fileName" -DestinationPath "D:\a\AutoUp\AutoUp\dist\$fileName.zip"
        shell: powershell

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name}}
          release_name: Release ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: D:\a\AutoUp\AutoUp\dist\${{ env.replaced_filename }}.zip
          asset_name: ${{ env.replaced_filename }}.zip
          asset_content_type: application/zip